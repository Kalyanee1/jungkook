---
 - hosts: localhost
   become: yes
  
   vars_files:
       - /home/ubuntu/snipe-it/vars/main.yml
   handlers:
      - include: /home/ubuntu/snipe-it/handlers/main.yml

   tasks:
      - name: install packages
        apt: name={{ item }} update_cache=yes state=latest
        with_items:
           - git
           - nginx
           - php7.4
           - php7.4-mysql
           - mysql-server
           - php7.4-mbstring
           - python3-mysqldb
           - php7.4-cli
           - php7.4-curl
           - php7.4-fpm
           - php7.4-intl
           - php7.4-sqlite3
           - php7.4-json
           - unzip
           - php7.4-gd
           - php7.4-ldap
           - php7.4-zip
           - php7.4-xml
           - php7.4-bcmath
           - php7.4-tokenizer
      - name: create /var/www/
        file: dest=/var/www/ state=directory  owner=www-data group=www-data mode=0770

      - name: Clone snipe-it  repository
        git:
          repo: https://github.com/snipe/snipe-it
          dest: /var/www/snipeit
          update: no
      - name: Copy .env.example to .env
        become: true
        template:
           src: dotenv.yml
           dest: /var/www/snipeit/.env

      - name: Create snipeit database
        become: true
        mysql_db: name="{{snipeit_dbname}}" state=present
        register: db_status

      - name: Create snipeit mysql user
        become: true
        mysql_user: name="{{snipeit-dbuser}}" host='localhost' password="{{snipeit_dbuser_password }}" priv=*.*:ALL state=present

      - name: restart mysql
        service: name=mysql state=restarted

      - name: download composer
        shell: curl -sS https://getcomposer.org/installer | php
      - name: Move composer.phar
        command: mv composer.phar /usr/local/bin/composer

      - name: Install composer
        shell: composer install --prefer-source --no-interaction chdir="/var/www/snipeit/"
      - name: change mode for storage on snipeit
        become: true
        file:
          path: /var/www/snipeit
          owner: www-data
          group: www-data
          mode: "0755"
          recurse: yes

      - name: change mode for storage on snipeit
        become: true
        file:
          path: /var/www/snipeit/public/uploads
          owner: www-data
          group: www-data
          mode: "0755"
          recurse: yes

      - name: Generate production app key
        shell: php artisan key:generate  chdir="/var/www/snipeit/"

     - name: Create snipe virtual host in nginx
       template: src=nginx_snipeit.conf dest=/etc/nginx/sites-available/snipeit.com.conf

      - name: Enable snipeit  virtual host
        file: src=/etc/nginx/sites-available/snipeit.com.conf dest=/etc/nginx/sites-enabled/snipeit.com.conf  owner=root  group=root  state=link
        notify:
         - restart nginx

      - name: Disable default site
        file: path=/etc/nginx/sites-enabled/default.conf state=absent
        notify:
         - restart nginx

      - name: Create phpinfo.php file
        copy:
          dest: /var/www/html/phpinfo.php  mode=0755
          content: |
            <?php\nphpinfo();\n?> >

      - name: Make sure nginx is enabled and starts on boot
        service: name=nginx  state=started enabled=yes

 